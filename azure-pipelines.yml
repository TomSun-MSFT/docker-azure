# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pr:
- master

jobs:
- job: azure_docker_integration
  timeoutInMinutes: 120

  pool:
    vmImage: 'ubuntu-latest'

  variables:
    dockerId: tbillah
    imageName: tbillah/entry_point
    user: tb571
    wd: /home


  steps:
  - task: Docker@2
    displayName: Login to Docker Hub
    inputs:
      command: login
      containerRegistry: dockerHub


  - task: CopyFiles@2
    displayName: 'Copy test configFile'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: '**/structure-test.yaml'
      TargetFolder: '$(Agent.BuildDirectory)'



  - script: |
        ls -lad $(Agent.BuildDirectory)
        ls -la $(Agent.BuildDirectory)
        docker build -t $(imageName) -f Dockerfile.entrypoint --build-arg USER=$(user) --build-arg CWD=$(wd) .
        docker run --rm $(imageName) "python -V"
        # docker push $(imageName)
    displayName: 'Build and test a docker image'
    failOnStderr: true


  - task: Docker@2
    displayName: Push image to Docker Hub
    inputs:
      command: push
      containerRegistry: dockerHub
      repository: $(imageName)
      tags: 'latest'
      
  


   
  - task: ContainerStructureTest@0
    displayName: Test container
    inputs:
      dockerRegistryServiceConnection: 'dockerHub'
      repository: 'tbillah/entry_point'
      tag: 'latest'
      configFile: '$(Agent.BuildDirectory)/structure-test.yaml'
      failTaskOnFailedTests: true
      
      
      



